class Solution {
    public String decodeString(String s) {
        Stack<Integer>countStack = new Stack<>();
        Stack<String>currString = new Stack<>();
        StringBuilder sb = new StringBuilder("");
        int i=0;
        while(i<s.length())
        {
            if(s.charAt(i)=='[')
            {
                currString.push(sb.toString());
                sb = new StringBuilder("");
                i++;
            }
            else if(s.charAt(i)==']')
            {
                int times = countStack.pop();
                StringBuilder res = new StringBuilder(currString.pop());
                
                for(int j=0;j<times;j++)
                {
                    res.append(sb.toString());
                    
                }
                sb = new StringBuilder(res.toString());
                i++;
            }
            else if(Character.isDigit(s.charAt(i)))
            {
                int cnt=0;
                while(Character.isDigit(s.charAt(i)))
                {
                    cnt= cnt*10 + (s.charAt(i)-'0');
                    i++;
                }
                countStack.push(cnt);
            }
            else
            {
                sb.append(s.charAt(i));
                i++;
            }
        }
        return sb.toString();
    }
}
