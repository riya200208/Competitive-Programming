import java.util.*;
import java.io.*;
public class Main
{
    static boolean found;
    static int find(int mat[][][],int dx,int dy,int curr,int curc,int m,int n,int destr,int destc)
    {
        if(curr == destr && curc == destc){
            found = true;
            return 0;
        }
  
        int ind=0;
        if(dx == -1 && dy == -1)
        {
            ind =1;
        }
        else if(dx == -1 && dy == 1)
        {
            ind = 2;
        }
        else if(dx == 1&& dy == -1)
            ind =3;
        if(mat[curr][curc][ind]==1){
            
                return -1;
        }
        mat[curr][curc][ind]=1;
        int sum=0;
        if((curr == 0 && dx == -1)||(curr == m-1 && dx == 1))
        {
            sum=1;
            dx=-dx;
        }
        if((curc == 0 && dy == -1)||(curc == n-1 && dy == 1)){
            dy = -dy;
            sum=1;
        }
       
        return sum+find(mat,dx,dy,curr+dx,curc+dy,m,n,destr,destc);
        
    }
	public static void main(String[] args) throws IOException{
		 BufferedReader sc=new BufferedReader(new InputStreamReader(System.in));
         long t = Long.parseLong(sc.readLine());
	
		while(t>0)
		{
		   
		    String st[]=sc.readLine().split(" ");
		    found = false;
		    int m = Integer.parseInt(st[0]),n = Integer.parseInt(st[1]),x = Integer.parseInt(st[2]),y = Integer.parseInt(st[3]),destx = Integer.parseInt(st[4]),desty=Integer.parseInt(st[5]);
		    int mat[][][]=new int[m][n][4];
		   
		    if(st[6].equals("DL"))
		    {
		      
		       int steps =0;
		     
		         steps = find(mat,1,-1,x-1,y-1,m,n,destx-1,desty-1);
		       if(found)
		       {
		           System.out.println(steps);
		       }
		       else
		            System.out.println("-1");
		    }
		    else if(st[6].equals("DR"))
		    {
		        
		        int steps =0;
		        
		         steps = find(mat,1,1,x-1,y-1,m,n,destx-1,desty-1);
		       if(found)
		       {
		           System.out.println(steps);
		       }
		       else
		            System.out.println("-1");
		    }
		      else if(st[6].equals("UR"))
    		    {
    		         int steps=0;
    		      
    		            steps=  find(mat,-1,1,x-1,y-1,m,n,destx-1,desty-1);
    		       if(found)
    		       {
    		           System.out.println(steps);
    		       }
    		       else
    		            System.out.println("-1");
    		    }
		      else if(st[6].equals("UL"))
		    {
		      
		       int steps=0;
    		  
		            steps =  find(mat,-1,-1,x-1,y-1,m,n,destx-1,desty-1);
		       if(found)
		       {
		           System.out.println(steps);
		       }
		       else
		            System.out.println("-1");
		    }
		    t--;
		}
	}
}

//Links: https://codeforces.com/contest/1807/problem/F
